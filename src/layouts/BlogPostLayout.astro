---
import MainLayout from "./MainLayout.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
  title: string;
  description?: string;
  pubDate: Date | string;
  updatedDate?: Date | string;
  heroImage?: string;
  categories?: string[];
}

const { title, description, pubDate, updatedDate, heroImage, categories } = Astro.props;

// Format date or use a fallback
function formatDate(date: Date | string | undefined) {
  if (!date) return '';
  
  const dateObj = date instanceof Date ? date : new Date(date);
  
  if (isNaN(dateObj.getTime())) {
    return String(date);
  }
  
  return dateObj.toLocaleDateString('en-us', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}

const formattedPubDate = formatDate(pubDate);
const formattedUpdatedDate = formatDate(updatedDate);

// Get ISO string safely
function toISOSafe(date: Date | string | undefined) {
  if (!date) return '';
  
  const dateObj = date instanceof Date ? date : new Date(date);
  
  if (isNaN(dateObj.getTime())) {
    return '';
  }
  
  return dateObj.toISOString();
}

const pubDateISO = toISOSafe(pubDate);
const updatedDateISO = toISOSafe(updatedDate);
---
---

<MainLayout title={title} description={description}>
  <link rel="stylesheet" href={import.meta.env.BASE_URL + 'css/blog-post.css'} slot="head" />
  <article class="blog-post">
    {heroImage && <img src={import.meta.env.BASE_URL + heroImage.replace(/^\//, '')} alt={title} class="hero-image" />}
    
    <h1 class="title">{title}</h1>
    
    <div class="post-meta">
      <time datetime={pubDateISO}>Published on {formattedPubDate}</time>
      {updatedDate && (
        <div class="updated-date">
          <time datetime={updatedDateISO}>
            Updated on {formattedUpdatedDate}
          </time>
        </div>
      )}
      {categories && categories.length > 0 && (
        <div class="categories">
          <span>Categories: </span>
          <ul>
            {categories.map((category) => (
              <li>
                <a href={`/category/${category.toLowerCase().replace(/\s+/g, '-')}`}>{category}</a>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
    
    <div class="post-content">
      <slot />
    </div>
  </article>
</MainLayout>
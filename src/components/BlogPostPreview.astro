---
import { t } from "../utils/i18n";
import i18next from "i18next";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  url: string;
  heroImage?: string;
  categories?: string[];
}

const { title, description, pubDate, url, heroImage, categories } = Astro.props;

const currentLocale = i18next.language || "en";
const formattedDate = pubDate.toLocaleDateString(currentLocale === "ja" ? "ja-JP" : "en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});
---

<article class="post-card">
  {heroImage && (
    <div class="image-container">
      <a href={url} class="image-link">
        <img src={import.meta.env.BASE_URL + heroImage.replace(/^\//, '')} alt={title} />
      </a>
    </div>
  )}
  <div class="content">
    <div class="meta">
      <time datetime={pubDate.toISOString()}>{formattedDate}</time>
      {categories && categories.length > 0 && (
        <div class="categories">
          {categories.map((category, index) => (
            <>
              <span class="category-tag">{category}</span>
              {index < categories.length - 1 && <span class="separator">•</span>}
            </>
          ))}
        </div>
      )}
    </div>
    <h2 class="title"><a href={url}>{title}</a></h2>
    <p class="description">{description}</p>
    <a href={url} class="read-more">{t("common.readMore")}</a>
  </div>
</article>

<style>
  .post-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .post-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
  
  .image-container {
    overflow: hidden;
    position: relative;
  }
  
  .image-link {
    display: block;
    position: relative;
  }
  
  .post-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .post-card:hover img {
    transform: scale(1.05);
  }
  
  .content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .meta {
    color: #666;
    font-size: 0.875rem;
    margin-bottom: 1rem;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.75rem;
  }
  
  .categories {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
  
  .category-tag {
    background-color: var(--service-blue);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
  }
  
  .separator {
    color: #ccc;
    font-size: 0.75rem;
  }
  
  .title {
    margin: 0 0 1rem 0;
    font-size: 1.25rem;
    line-height: 1.3;
    flex: 1;
  }
  
  .title a {
    color: var(--color-secondary);
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  .title a:hover {
    color: var(--service-blue);
  }
  
  .description {
    margin-bottom: 1.5rem;
    color: #666;
    line-height: 1.6;
    flex: 1;
  }
  
  .read-more {
    color: var(--service-blue);
    font-weight: 600;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    align-self: flex-start;
  }
  
  .read-more:hover {
    color: #3a93e6;
    transform: translateX(4px);
  }
  
  .read-more::after {
    content: '→';
    transition: transform 0.3s ease;
  }
  
  .read-more:hover::after {
    transform: translateX(2px);
  }
  
  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .content {
      padding: 1.25rem;
    }
    
    .title {
      font-size: 1.1rem;
    }
    
    .post-card img {
      height: 160px;
    }
    
    .meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
    
    .categories {
      gap: 0.25rem;
    }
    
    .category-tag {
      font-size: 0.7rem;
      padding: 0.2rem 0.6rem;
    }
  }
</style>
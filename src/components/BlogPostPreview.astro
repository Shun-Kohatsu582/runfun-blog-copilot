---
import { t } from "../utils/i18n";
import i18next from "i18next";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  url: string;
  heroImage?: string;
  categories?: string[];
}

const { title, description, pubDate, url, heroImage, categories } = Astro.props;

const currentLocale = i18next.language || "en";
const formattedDate = pubDate.toLocaleDateString(currentLocale === "ja" ? "ja-JP" : "en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});
---

<div class="post-preview">
  {heroImage && (
    <a href={url} class="image-link">
      <img src={import.meta.env.BASE_URL + heroImage.replace(/^\//, '')} alt={title} />
    </a>
  )}
  <div class="content">
    <div class="meta">
      <time datetime={pubDate.toISOString()}>{formattedDate}</time>
      {categories && categories.length > 0 && (
        <div class="categories">
          {categories.map((category, index) => (
            <>
              <a href={`/category/${category.toLowerCase().replace(/\s+/g, '-')}`}>{category}</a>
              {index < categories.length - 1 && <span class="separator">•</span>}
            </>
          ))}
        </div>
      )}
    </div>
    <h2 class="title"><a href={url}>{title}</a></h2>
    <p class="description">{description}</p>
    <a href={url} class="read-more">{t("common.readMore")}</a>
  </div>
</div>

<style>
  .post-preview {
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .post-preview:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .image-link {
    display: block;
    position: relative;
    overflow: hidden;
  }
  
  .post-preview img {
    width: 100%;
    height: 180px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .post-preview:hover img {
    transform: scale(1.05);
  }
  
  .content {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  
  .meta {
    color: #666;
    font-size: 0.875rem;
    margin-bottom: 0.75rem;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
  }
  
  .categories {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    margin-left: 0.5rem;
  }
  
  .categories a {
    color: var(--service-blue);
    font-weight: 500;
    text-decoration: none;
    font-size: 0.75rem;
    transition: color 0.2s;
  }
  
  .categories a:hover {
    color: #3a93e6;
  }
  
  .separator {
    color: #ccc;
    font-size: 0.75rem;
  }
  
  .title {
    margin: 0 0 0.75rem 0;
    font-size: 1.4rem;
    line-height: 1.3;
  }
  
  .title a {
    color: var(--color-secondary);
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .title a:hover {
    color: var(--service-blue);
  }
  
  .description {
    margin-bottom: 1.25rem;
    color: #555;
    flex-grow: 1;
  }
  
  .read-more {
    font-weight: 500;
    text-decoration: none;
    color: white;
    background-color: var(--service-blue);
    padding: 0.5rem 1rem;
    border-radius: 30px;
    transition: background-color 0.3s ease;
    display: inline-flex;
    align-items: center;
    margin-top: auto;
    font-size: 0.9rem;
  }
  
  .read-more:hover {
    background-color: #3a93e6;
  }
  
  .read-more:after {
    content: "→";
    margin-left: 0.5rem;
    transition: transform 0.2s ease;
  }
  
  .read-more:hover:after {
    transform: translateX(3px);
  }
</style>
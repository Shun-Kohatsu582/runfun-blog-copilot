---
import { t } from "../utils/i18n";
import i18next from "i18next";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  url: string;
  heroImage?: string;
  categories?: string[];
}

const { title, description, pubDate, url, heroImage, categories } = Astro.props;

const currentLocale = i18next.language || "en";
const formattedDate = pubDate.toLocaleDateString(currentLocale === "ja" ? "ja-JP" : "en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});
---

<article class="post-card">
  {heroImage && (
    <div class="image-container">
      <div class="post-image" style={`background-image: url(${import.meta.env.BASE_URL + heroImage.replace(/^\//, '')})`}></div>
    </div>
  )}
  <div class="content">
    <div>
      <h3 class="post-title">
        <a href={url}>{title}</a>
      </h3>
      <p class="post-description">{description}</p>
    </div>
    <a href={url} class="read-more">
      {t("common.readMore")}
      <svg class="read-more-icon" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
        <path 
          clip-rule="evenodd" 
          d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z"
          fill-rule="evenodd">
        </path>
      </svg>
    </a>
  </div>
</article>

<style>
  .post-card {
    background-color: white;
    border-radius: 0.75rem;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); /* shadow-xl */
    overflow: hidden;
    transition: box-shadow 0.3s;
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .post-card:hover {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25); /* shadow-2xl */
  }
  
  .image-container {
    width: 100%;
    height: 16rem; /* h-64 */
    overflow: hidden;
  }
  
  .post-image {
    width: 100%;
    height: 100%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
  
  .content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-grow: 1;
  }
  
  .post-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b; /* text-slate-800 */
    margin-bottom: 0.5rem;
    line-height: 1.2;
    transition: color 0.15s;
  }
  
  .post-card:hover .post-title a {
    color: #2563eb; /* text-blue-600 */
  }
  
  .post-title a {
    color: inherit;
    text-decoration: none;
  }
  
  .post-description {
    color: #475569; /* text-slate-600 */
    font-size: 0.875rem; /* text-sm */
    line-height: 1.5;
    margin-bottom: 1rem;
  }
  
  .read-more {
    display: inline-flex;
    align-items: center;
    font-weight: 500;
    color: #2563eb; /* text-blue-600 */
    text-decoration: none;
    transition: color 0.15s;
    align-self: flex-start;
    margin-top: auto;
  }
  
  .read-more:hover {
    color: #1d4ed8; /* text-blue-800 */
  }
  
  .read-more-icon {
    width: 1rem;
    height: 1rem;
    margin-left: 0.25rem;
    transform: translateX(0);
    transition: transform 0.15s;
  }
  
  .read-more:hover .read-more-icon {
    transform: translateX(0.25rem);
  }
  
  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .image-container {
      height: 12rem;
    }
    
    .content {
      padding: 1.25rem;
    }
    
    .post-title {
      font-size: 1.1rem;
    }
  }
</style>